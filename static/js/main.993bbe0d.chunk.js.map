{"version":3,"sources":["server.js","views/Login.js","components/Item.js","components/AddItem.js","components/ItemList.js","views/Home.js","views/Signup.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","username","password","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","currentToken","token","key32","window","crypto","getRandomValues","Uint32Array","i","length","toString","realToken","title","link","chapter","season","episode","type","data","Login","props","state","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","localStorage","getItem","logIn","setState","leavePage","handleText","bind","handleHover","handleKeyPress","handleLoginClick","handlePasswordClick","this","isValid","value","pos","e","key","server","userExists","verifyPassword","FormControl","error","InputLabel","Input","className","onClick","handleInputClick","onChange","target","FormHelperText","color","helperText","endAdornment","InputAdornment","position","IconButton","Button","variant","onMouseEnter","onMouseLeave","to","onKeyPress","Typography","renderUsername","renderPassword","renderLoginButton","renderSignupButton","React","Component","Item","Paper","Grid","container","direction","item","xs","noWrap","justify","size","console","log","AddItem","direciton","alignItems","TextField","label","style","width","Switch","margin","defaultValue","inputProps","textAlign","padding","ItemList","userData","prevState","modifyAnime","items","Object","entries","animes","ongoing","push","map","a","Home","handleSignOutClick","getUserData","nextProps","nextState","signOut","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","renderConfirm","App","isValidSession","generateToken","setItem","destroyToken","removeItem","verifyToken","exact","path","u","theme","createMuiTheme","palette","primary","main","secondary","background","default","paper","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.993bbe0d.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M',\n  authDomain: 'anman-list.firebaseapp.com',\n  databaseURL: 'https://anman-list-default-rtdb.firebaseio.com',\n  projectId: 'anman-list',\n  storageBucket: 'anman-list.appspot.com',\n  messagingSenderId: '763409917320',\n  appId: '1:763409917320:web:6034f95cf87d62d8b9463d'\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  async generateToken(username) {\n    let currentToken;\n    await db.ref(`tokens/${username}`).once('value', snapshot => {\n      currentToken = snapshot.val();\n    });\n    if (currentToken) {\n      return currentToken;\n    }\n\n    let token = '';\n    const key32 = window.crypto.getRandomValues(new Uint32Array(4));\n\t\tfor (let i = 0; i < key32.length; i++) {\n\t\t\ttoken += (i > 0) ? '-' : '';\n\t\t\ttoken += key32[i].toString(16);\n    }\n\n    db.ref('tokens/').update({\n      [username]: token\n    });\n    return token;\n  }\n\n  async verifyToken(username, token) {\n    if (!username) {\n      return false;\n    }\n\n    let realToken;\n    await db.ref(`tokens/${username}`).once('value', snapshot => {\n      realToken = snapshot.val();\n    });\n\n    return realToken === token;\n  }\n\n  destroyToken(username) {\n    db.ref('tokens/').update({\n      [username]: null\n    });\n  }\n\n  newManga(username, {title, link, chapter}) {\n    return\n  }\n\n  modifyManga(username, {title, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, title) {\n    return;\n  }\n\n  newAnime(username, {title, link, season, episode}) {\n    return;\n  }\n\n  modifyAnime(username, type, title, data) {\n    db.ref(`${username}/animes/${type}/${title}`).update(data);\n  }\n\n  removeAnime(username, title) {\n    return;\n  }\n\n  async getUserData(username) {\n    let data;\n    await db.ref(`${username}`).once('value', snapshot => {\n      data = snapshot.val();\n    });\n    return data;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n\n      usernameError: '',\n      passwordError: '',\n\n      hidePassword:      true,\n      loginButtonHover:  false,\n      signupButtonHover: false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  async componentDidMount() {\n    if (await this.props.isValid()) {\n      this.setState({ leavePage: '/' });\n    }\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleLoginClick();\n    }\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username does not exist.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ passwordError: 'Incorrect password.' });\n      return;\n    }\n\n    await this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleLoginClick}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'signup' }) }\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign Up\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          LOGIN\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid        from '@material-ui/core/Grid';\nimport Paper       from '@material-ui/core/Paper';\nimport Typography  from '@material-ui/core/Typography';\nimport IconButton  from '@material-ui/core/IconButton';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: this.props.title,\n      link: this.props.link,\n      season: this.props.season,\n      episode: this.props.episode,\n    };\n  }\n\n  render() {\n    return (\n      <Paper className='Item'>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={10} container direction='column' className='contentText'>\n            <Typography noWrap variant='h6'>\n              {this.state.title}\n            </Typography>\n            <br/>\n            <Typography noWrap variant='body1'>\n              {this.state.link}\n            </Typography>\n          </Grid>\n\n          <Grid item xs container>\n            <Grid item xs container direction='column' justify='center'>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('season up') }} >\n                  <KeyboardArrowUpIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <Typography variant='overline'>{this.state.season}</Typography>\n              </Grid>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('season down') }} >\n                  <KeyboardArrowDownIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs container direction='column' justify='center'>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('episode up') }} >\n                  <KeyboardArrowUpIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <Typography variant='overline'>{this.state.episode}</Typography>\n              </Grid>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('episode down') }}>\n                  <KeyboardArrowDownIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default Item;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid       from '@material-ui/core/Grid';\nimport Paper      from '@material-ui/core/Paper';\nimport Switch     from '@material-ui/core/Switch';\nimport Button     from '@material-ui/core/Button';\nimport TextField  from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nclass AddItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Paper className='Item'>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={10} container direction='column' className='contentText'>\n            <Grid item container direciton='row' alignItems='center'>\n              <Grid item xs={8}>\n                <TextField label='Title' variant='outlined' style={{ width: '80%' }}/>\n              </Grid>\n              <Grid item xs container direction='row' alignItems='center'>\n                <Grid item>S/E</Grid>\n                <Grid item><Switch /></Grid>\n                <Grid item>Ch.</Grid>\n              </Grid>\n            </Grid>\n            <br/>\n            <Grid item container direction='row' alignItems='center'>\n              <TextField label='Link' variant='outlined' size='small' style={{ width: '70%', margin: '0 10% 0 0' }} />\n              <Button variant='outlined'>Add</Button>\n            </Grid>\n          </Grid>\n\n          <Grid item xs container>\n            <Grid item xs container direction='column' justify='center'>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('season up') }} >\n                  <KeyboardArrowUpIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <TextField defaultValue='1' variant='outlined' size='small' style={{ width: '90%' }} inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}/>\n              </Grid>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('season down') }} >\n                  <KeyboardArrowDownIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <Grid item xs container direction='column' justify='center'>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('episode up') }} >\n                  <KeyboardArrowUpIcon />\n                </IconButton>\n              </Grid>\n              <Grid item>\n                <TextField defaultValue='1' variant='outlined' size='small' style={{ width: '90%' }} inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}/>\n              </Grid>\n              <Grid item>\n                <IconButton size='small' onClick={ () => {console.log('episode down') }}>\n                  <KeyboardArrowDownIcon />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default AddItem;\n","import React from 'react';\n\nimport './ItemList.css';\n\nimport Item    from './Item';\nimport AddItem from './AddItem';\n\nclass ItemList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.userData,\n    };\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.props.data !== prevState.data) {\n      this.setState({ data: this.props.data });\n    }\n  }\n\n  updateItem(title, data) {\n    this.props.server.modifyAnime(this.props.username, this.props.type, title, data);\n  }\n\n  render() {\n    if (!this.state.data) {\n      return <div />;\n    }\n\n    let items = [];\n    for (const [key, value] of Object.entries(this.state.data.animes.ongoing)) {\n      items.push({title: key, season: value.season, episode: value.episode, link: value.link});\n    }\n    console.log(items)\n\n    return (\n      <div className='ItemList'>\n        <AddItem />\n        {items.map(a => {\n          return <Item title={a.title} season={a.season} episode={a.episode} link={a.link} />\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ItemList;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Home.css';\n\nimport Button from '@material-ui/core/Button';\n\nimport ItemList from '../components/ItemList';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    if (!this.props.username || !this.props.token) {\n      this.state = { leavePage: 'login' };\n    }\n\n    this.handleSignOutClick = this.handleSignOutClick.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      userData: await this.props.server.getUserData(this.props.username)\n    });\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    if (!await nextProps.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    return true;\n  }\n\n  handleSignOutClick() {\n    this.props.signOut();\n    this.setState({ leavePage: 'login' });\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='Home'>\n        <Button\n          className='signout'\n          variant='outlined'\n          color='primary'\n          onClick={this.handleSignOutClick}>\n            Sign Out\n        </Button>\n        <br/><br/>\n        <ItemList server={this.props.server} data={this.state.userData} />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword:      true,\n      hideConfirm:       true,\n      signupButtonHover: false,\n      loginButtonHover:  false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  async componentDidMount() {\n    if (await this.props.isValid()) {\n      this.setState({ leavePage: '/' });\n    }\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSignupClick();\n    }\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    await this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  handleConfirmClick() {\n    this.setState({ hideConfirm: !this.state.hideConfirm });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleSignupClick}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'login' }) }\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          SIGN UP\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport myServer from './server';\nimport Login    from './views/Login';\nimport Home     from './views/Home';\nimport Signup   from './views/Signup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: localStorage.getItem('username'),\n      token: localStorage.getItem('token'),\n    };\n\n    this.logIn          = this.logIn.bind(this);\n    this.signOut        = this.signOut.bind(this);\n    this.isValidSession = this.isValidSession.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.isValidSession()) {\n\n    }\n  }\n\n  async logIn(username) {\n    const token = await myServer.generateToken(username);\n    this.setState({\n      username: username,\n      token: token,\n    });\n    localStorage.setItem('username', username);\n    localStorage.setItem('token', token);\n  }\n\n  signOut() {\n    myServer.destroyToken(this.state.username);\n    this.setState({\n      username: '',\n      token: '',\n    });\n    localStorage.removeItem('username');\n    localStorage.removeItem('token');\n  }\n\n  async isValidSession() {\n    return await myServer.verifyToken(this.state.username, this.state.token);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/'>\n              <Home\n                server={ myServer }\n                username={this.state.username}\n                token={this.state.token}\n                signOut={ () => this.signOut() }\n                isValid={this.isValidSession}/>\n            </Route>\n            <Route path='/login'>\n              <Login\n                server={ myServer }\n                logIn={ (u) => this.logIn(u) }\n                isValid={this.isValidSession} />\n            </Route>\n            <Route path='/signup'>\n              <Signup\n                server={ myServer }\n                logIn={ (u) => this.logIn(u) }\n                isValid={this.isValidSession} />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#987CCF',\n    },\n    secondary: {\n      main: '#EE99FF',\n    },\n    background: {\n      default: '#222639',\n      paper: '#1B1E2E',\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}