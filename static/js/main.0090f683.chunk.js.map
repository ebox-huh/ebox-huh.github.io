{"version":3,"sources":["server.js","views/Login.js","components/Item.js","components/AddItem.js","components/ItemList.js","views/Home.js","views/Signup.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","username","password","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","currentToken","token","key32","window","crypto","getRandomValues","Uint32Array","i","length","toString","realToken","type","title","data","link","chapter","mediaType","Login","props","state","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","localStorage","getItem","logIn","setState","leavePage","handleKeyPress","bind","handleLoginClick","handlePasswordClick","this","isValid","value","pos","e","key","server","userExists","verifyPassword","FormControl","error","InputLabel","Input","className","onClick","handleInputClick","onChange","handleText","target","FormHelperText","color","endAdornment","InputAdornment","position","IconButton","Button","variant","onMouseEnter","handleHover","onMouseLeave","to","onKeyPress","Typography","renderUsername","renderPassword","renderLoginButton","renderSignupButton","React","Component","Item","original","season","episode","new","itemHasUpdated","updateItem","navigator","clipboard","writeText","toggleSnackbar","n","includes","isNaN","Number","console","log","prevState","Grid","item","xs","container","direction","justify","size","handleInput","Paper","style","noWrap","copyLink","renderSeasonCounter","renderEpisodeChapterCounter","alignItems","disabled","AddItem","titleError","linkError","submit","submitManga","submitAnime","TextField","width","inputProps","textAlign","padding","maxWidth","borderStyle","borderWidth","borderColor","direciton","label","margin","ItemList","userData","modifyAnime","newAnime","refresh","newManga","t","d","items","Object","entries","push","map","a","Home","tab","snackbarOpen","handleTab","handleSignOutClick","getUserData","nextProps","nextState","newValue","signOut","Tabs","centered","Tab","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","message","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","helperText","renderConfirm","App","isValidSession","generateToken","setItem","destroyToken","removeItem","verifyToken","exact","path","u","theme","createMuiTheme","palette","primary","main","secondary","background","default","paper","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.0090f683.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M',\n  authDomain: 'anman-list.firebaseapp.com',\n  databaseURL: 'https://anman-list-default-rtdb.firebaseio.com',\n  projectId: 'anman-list',\n  storageBucket: 'anman-list.appspot.com',\n  messagingSenderId: '763409917320',\n  appId: '1:763409917320:web:6034f95cf87d62d8b9463d'\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  async generateToken(username) {\n    let currentToken;\n    await db.ref(`tokens/${username}`).once('value', snapshot => {\n      currentToken = snapshot.val();\n    });\n    if (currentToken) {\n      return currentToken;\n    }\n\n    let token = '';\n    const key32 = window.crypto.getRandomValues(new Uint32Array(4));\n\t\tfor (let i = 0; i < key32.length; i++) {\n\t\t\ttoken += (i > 0) ? '-' : '';\n\t\t\ttoken += key32[i].toString(16);\n    }\n\n    db.ref('tokens/').update({\n      [username]: token\n    });\n    return token;\n  }\n\n  async verifyToken(username, token) {\n    if (!username) {\n      return false;\n    }\n\n    let realToken;\n    await db.ref(`tokens/${username}`).once('value', snapshot => {\n      realToken = snapshot.val();\n    });\n\n    return realToken === token;\n  }\n\n  destroyToken(username) {\n    db.ref('tokens/').update({\n      [username]: null\n    });\n  }\n\n  newManga(username, type, title, data) {\n    db.ref(`${username}/mangas/${type}`).update({\n      [title]: data,\n    });\n  }\n\n  modifyManga(username, {title, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, title) {\n    return;\n  }\n\n  newAnime(username, type, title, data) {\n    db.ref(`${username}/animes/${type}`).update({\n      [title]: data,\n    });\n  }\n\n  modifyAnime(username, type, title, data) {\n    db.ref(`${username}/animes/${type}/${title}`).update(data);\n  }\n\n  removeAnime(username, title) {\n    return;\n  }\n\n  async getUserData(username, mediaType, type) {\n    let data;\n    await db.ref(`${username}/${mediaType}s/${type}`).once('value', snapshot => {\n      data = snapshot.val();\n    });\n    return data;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n\n      usernameError: '',\n      passwordError: '',\n\n      hidePassword:      true,\n      loginButtonHover:  false,\n      signupButtonHover: false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    // this.handleText          = this.handleText.bind(this);\n    // this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  async componentDidMount() {\n    if (await this.props.isValid()) {\n      this.setState({ leavePage: '/' });\n    }\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleLoginClick();\n    }\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username does not exist.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ passwordError: 'Incorrect password.' });\n      return;\n    }\n\n    await this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleLoginClick}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'outlined' : 'text'}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'signup' }) }\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign Up\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          LOGIN\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid        from '@material-ui/core/Grid';\nimport Paper       from '@material-ui/core/Paper';\nimport Typography  from '@material-ui/core/Typography';\nimport IconButton  from '@material-ui/core/IconButton';\n\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckIcon from '@material-ui/icons/Check';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { Snackbar } from '@material-ui/core';\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      original: {\n        title:   this.props.title,\n        link:    this.props.link,\n        season:  this.props.season,\n        episode: this.props.episode,\n        chapter: this.props.chapter,\n      },\n      new: {\n        title:   this.props.title,\n        link:    this.props.link,\n        season:  this.props.season,\n        episode: this.props.episode,\n        chapter: this.props.chapter,\n      },\n    };\n\n    this.itemHasUpdated = this.itemHasUpdated.bind(this);\n    this.updateItem = this.updateItem.bind(this);\n  }\n\n  copyLink() {\n    navigator.clipboard.writeText(this.state.new.link);\n    this.props.toggleSnackbar();\n  }\n\n  itemHasUpdated() {\n    const original = this.state.original;\n    const n = this.state.new;\n\n    if (original.title && original.title !== n.title) {\n      return true;\n    }\n    if (original.link && original.link !== n.link) {\n      return true;\n    }\n    if (original.season && original.season !== n.season) {\n      return true;\n    }\n    if (original.episode && original.episode !== n.episode) {\n      return true;\n    }\n    if (original.chapter && original.chapter !== n.chapter) {\n      return true;\n    }\n    return false;\n  }\n\n  updateItem() {\n    if (this.itemHasUpdated()) {\n      this.props.update(this.state.new.title, this.state.new)\n    }\n  }\n\n  handleInput(type, value) {\n    if (type === 'epch') {\n      type = this.props.type === 'manga' ? 'chapter' : 'episode';\n    }\n\n    if (['season', 'episode', 'chapter'].includes(type)) {\n      if (isNaN(Number(value))) {\n        return;\n      }\n\n      value = Number(value)\n\n      if (value < 0) {\n        value = 0;\n      }\n      console.log(value);\n    }\n\n    this.setState(prevState => ({\n      new: {\n        ...prevState.new,\n        [type]: value\n      }\n    }));\n    console.log(this.state);\n  }\n\n  renderSeasonCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('season', this.state.new.season + 1) }>\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Typography variant='overline'>{this.state.new.season}</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('season', this.state.new.season - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderEpisodeChapterCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.new.chapter + 1 : this.state.new.episode + 1) }>\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Typography variant='overline'>{this.props.type === 'manga' ? this.state.new.chapter : this.state.new.episode}</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton size='small' onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter - 1 : this.state.new.episode - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Paper className='Item'>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={9} container direction='column' className='contentText'>\n            <Grid item style={{ 'width': '100%' }}>\n              <Typography noWrap variant='h6'>\n                {this.state.new.title}\n              </Typography>\n            </Grid>\n            <br/>\n            <Grid item container direction='row'>\n              <Grid item xs>\n                <Typography noWrap variant='body2' color=\"primary\" onClick={() => this.copyLink()}>\n                  <a className=\"link\">{this.state.new.link}</a>\n                </Typography>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item xs={2} container>\n            {this.props.type === 'manga' ? <div/> : this.renderSeasonCounter()}\n            {this.renderEpisodeChapterCounter()}\n          </Grid>\n\n          <Grid item xs={1} container justify=\"center\" alignItems=\"center\">\n            <IconButton disabled={!this.itemHasUpdated()} onClick={this.updateItem} >\n              <CheckIcon />\n            </IconButton>\n            <IconButton disabled={!this.itemHasUpdated()} onClick={this.updateItem}>\n              <ClearIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default Item;\n","import React from 'react';\n\nimport './Item.css';\n\nimport Grid       from '@material-ui/core/Grid';\nimport Paper      from '@material-ui/core/Paper';\nimport Button     from '@material-ui/core/Button';\nimport TextField  from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\n\nclass AddItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title:   this.props.title   || '',\n      link:    this.props.link    || '',\n      season:  this.props.season  || 1,\n      episode: this.props.episode || 1,\n      chapter: this.props.chapter || 1,\n      titleError: false,\n      linkError: false,\n    };\n\n    this.submit = this.submit.bind(this);\n  }\n\n  handleInput(type, value) {\n    if (type === 'epch') {\n      type = this.props.type === 'manga' ? 'chapter' : 'episode';\n    }\n\n    if (['season', 'episode', 'chapter'].includes(type)) {\n      if (isNaN(Number(value))) {\n        return;\n      }\n\n      value = Number(value)\n\n      if (value < 0) {\n        value = 0;\n      }\n    }\n\n    this.setState({ [type]: value });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      titleError: type === 'title' ? false : this.state.titleError,\n      linkError:  type === 'link' ? false : this.state.linkError,\n    });\n  }\n\n  async submit() {\n    // check if inputs are valid\n    if (!this.state.title) {\n      this.setState({ titleError: true });\n      return;\n    }\n    if (!this.state.link) {\n      this.setState({ linkError: true })\n      return;\n    }\n\n    if (this.props.type === 'manga') {\n      await this.props.submitManga(this.state.title, { 'chapter': this.state.chapter, 'link': this.state.link });\n    } else {\n      await this.props.submitAnime(this.state.title, { 'season': this.state.season, 'episode': this.state.episode, 'link': this.state.link });\n    }\n\n    this.setState({\n      title: '',\n      link: '',\n      season: 1,\n      episode: 1,\n      chapter: 1,\n      titleError: false,\n      linkError: false,\n    });\n  }\n\n  renderSeasonCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('season', this.state.season + 1) } >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <TextField\n            variant='outlined'\n            size='small'\n            style={{ width: '90%' }}\n            inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}\n            value={this.state.season}\n            onChange={ (e) => this.handleInput('season', e.target.value) }/>\n        </Grid>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('season', this.state.season - 1) } >\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderEpisodeChapterCounter() {\n    return (\n      <Grid item xs container direction='column' justify='center'>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter + 1 : this.state.episode + 1) } >\n            <KeyboardArrowUpIcon />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <TextField\n            variant='outlined'\n            size='small'\n            style={{ width: '90%', maxWidth: '50px' }}\n            inputProps={{style: { textAlign: 'center',  padding: '10.5px 7px'}}}\n            value={this.props.type === 'manga' ? this.state.chapter : this.state.episode}\n            onChange={ (e) => this.handleInput('epch', e.target.value) }/>\n        </Grid>\n        <Grid item>\n          <IconButton\n            size='small'\n            onClick={ () => this.handleInput('epch', this.props.type === 'manga' ? this.state.chapter - 1 : this.state.episode - 1) }>\n            <KeyboardArrowDownIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    return (\n      <Paper className='Item' style={{ borderStyle: 'solid', borderWidth: '1px', borderColor: '#5F527A' }}>\n        <Grid container direction='row' className='cell'>\n          <Grid item xs={10} container direction='column' className='contentText'>\n            <Grid item container direciton='row' alignItems='center'>\n              <TextField\n                label='Title'\n                error={this.state.titleError}\n                variant='outlined'\n                style={{ width: '90%' }}\n                value={this.state.title}\n                onClick={ () => this.handleInputClick('title') }\n                onChange={ (e) => this.handleInput('title', e.target.value) }/>\n            </Grid>\n            <br/>\n            <Grid item container direction='row' alignItems='center'>\n              <TextField\n                label='Link'\n                error={this.state.linkError}\n                variant='outlined'\n                size='small'\n                style={{ width: '75%', margin: '0 5% 0 0' }}\n                value={this.state.link}\n                onClick={ () => this.handleInputClick('link') }\n                onChange={ (e) => this.handleInput('link', e.target.value) }/>\n              <Button variant='outlined' onClick={this.submit}>Add</Button>\n            </Grid>\n          </Grid>\n          <Grid item xs container>\n            {this.props.type === 'manga' ? <div/> : this.renderSeasonCounter()}\n            {this.renderEpisodeChapterCounter()}\n          </Grid>\n        </Grid>\n      </Paper>\n    );\n  }\n}\n\nexport default AddItem;\n","import React from 'react';\n\nimport './ItemList.css';\n\nimport Item    from './Item';\nimport AddItem from './AddItem';\n\nclass ItemList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: this.props.userData,\n    };\n  }\n\n  async componentDidUpdate(prevState) {\n    if (this.props.data !== prevState.data) {\n      this.setState({ data: this.props.data });\n    }\n  }\n\n  updateItem(title, data) {\n    this.props.server.modifyAnime(this.props.username, this.props.type, title, data);\n  }\n\n  async submitAnime(title, data) {\n    this.props.server.newAnime(this.props.username, this.props.type, title, data);\n    await this.props.refresh();\n  }\n\n  async submitManga(title, data) {\n    this.props.server.newManga(this.props.username, this.props.type, title, data);\n    await this.props.refresh();\n  }\n\n  render() {\n    if (!this.state.data) {\n      return (\n        <div className='ItemList'>\n          <AddItem\n            submitAnime={ (t, d) => this.submitAnime(t, d) }\n            submitManga={ (t, d) => this.submitManga(t, d) }\n            type={this.props.mediaType}/>\n        </div>\n      );\n    }\n\n    let items = [];\n    for (const [key, value] of Object.entries(this.state.data)) {\n      items.push({title: key, season: value.season, episode: value.episode, chapter: value.chapter, link: value.link});\n    }\n    console.log(items)\n\n    return (\n      <div className='ItemList'>\n        <AddItem\n          submitAnime={ (t, d) => this.submitAnime(t, d) }\n          submitManga={ (t, d) => this.submitManga(t, d) }\n          type={this.props.mediaType}/>\n        {items.map(a => {\n          return <Item\n                    key={a.title}\n                    title={a.title}\n                    season={a.season}\n                    episode={a.episode}\n                    chapter={a.chapter}\n                    link={a.link}\n                    type={this.props.mediaType}\n                    update={this.updateItem}\n                    toggleSnackbar={this.props.toggleSnackbar}/>})}\n      </div>\n    );\n  }\n}\n\nexport default ItemList;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Home.css';\n\nimport Tab    from '@material-ui/core/Tab';\nimport Tabs   from '@material-ui/core/Tabs';\nimport Paper  from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nimport ItemList from '../components/ItemList';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tab: 'anime',\n      snackbarOpen: false,\n    };\n\n    if (!this.props.username || !this.props.token) {\n      this.state = { leavePage: 'login' };\n    }\n\n    this.refresh            = this.refresh.bind(this);\n    this.handleTab          = this.handleTab.bind(this);\n    this.toggleSnackbar     = this.toggleSnackbar.bind(this);\n    this.handleSignOutClick = this.handleSignOutClick.bind(this);\n  }\n\n  toggleSnackbar() {\n    this.setState({ snackbarOpen: !this.state.snackbarOpen });\n  }\n\n  async componentDidMount() {\n    await this.refresh();\n  }\n\n  async refresh() {\n    if (!await this.props.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    this.setState({\n      userData: await this.props.server.getUserData(this.props.username, this.state.tab, 'ongoing')\n    });\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    if (!await nextProps.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    return  true;\n  }\n\n  async handleTab(e, newValue) {\n    this.setState({ tab: newValue });\n    await this.refresh()\n  }\n\n  handleSignOutClick() {\n    this.props.signOut();\n    this.setState({ leavePage: 'login' });\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='Home'>\n        <Paper>\n          <Tabs\n            value={this.state.tab}\n            onChange={this.handleTab}\n            centered>\n            <Tab value='anime' label='anime' />\n            <Tab value='manga' label='manga' />\n          </Tabs>\n        </Paper>\n\n        <br/><br/>\n\n        <Button\n          className='signout'\n          variant='outlined'\n          color='primary'\n          onClick={this.handleSignOutClick}>\n            Sign Out\n        </Button>\n        <br/><br/>\n        <ItemList\n          username={this.props.username}\n          mediaType={this.state.tab}\n          type='ongoing'\n          server={this.props.server}\n          data={this.state.userData}\n          refresh={this.refresh}\n          toggleSnackbar={this.toggleSnackbar}/>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.snackbarOpen}\n          autoHideDuration={3000}\n          onClose={this.toggleSnackbar}\n          message=\"Link copied.\"/>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword:      true,\n      hideConfirm:       true,\n      signupButtonHover: false,\n      loginButtonHover:  false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    // this.handleText          = this.handleText.bind(this);\n    // this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  async componentDidMount() {\n    if (await this.props.isValid()) {\n      this.setState({ leavePage: '/' });\n    }\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSignupClick();\n    }\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    await this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  handleConfirmClick() {\n    this.setState({ hideConfirm: !this.state.hideConfirm });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleSignupClick}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'login' }) }\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          SIGN UP\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport myServer from './server';\nimport Login    from './views/Login';\nimport Home     from './views/Home';\nimport Signup   from './views/Signup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: localStorage.getItem('username'),\n      token: localStorage.getItem('token'),\n    };\n\n    this.logIn          = this.logIn.bind(this);\n    this.signOut        = this.signOut.bind(this);\n    this.isValidSession = this.isValidSession.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.isValidSession()) {\n\n    }\n  }\n\n  async logIn(username) {\n    const token = await myServer.generateToken(username);\n    this.setState({\n      username: username,\n      token: token,\n    });\n    localStorage.setItem('username', username);\n    localStorage.setItem('token', token);\n  }\n\n  signOut() {\n    myServer.destroyToken(this.state.username);\n    this.setState({\n      username: '',\n      token: '',\n    });\n    localStorage.removeItem('username');\n    localStorage.removeItem('token');\n  }\n\n  async isValidSession() {\n    return await myServer.verifyToken(this.state.username, this.state.token);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/'>\n              <Home\n                server={ myServer }\n                username={this.state.username}\n                token={this.state.token}\n                signOut={ () => this.signOut() }\n                isValid={this.isValidSession}/>\n            </Route>\n            <Route path='/login'>\n              <Login\n                server={ myServer }\n                logIn={ (u) => this.logIn(u) }\n                isValid={this.isValidSession} />\n            </Route>\n            <Route path='/signup'>\n              <Signup\n                server={ myServer }\n                logIn={ (u) => this.logIn(u) }\n                isValid={this.isValidSession} />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#987CCF',\n    },\n    secondary: {\n      main: '#EE99FF',\n    },\n    background: {\n      default: '#222639',\n      paper: '#1B1E2E',\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}