{"version":3,"sources":["views/Login.js","views/Home.js","server.js","views/Signup.js","App.js","index.js"],"names":["Login","props","state","username","password","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","handleText","bind","handleHover","handleLoginClick","handlePasswordClick","type","value","this","setState","server","userExists","verifyPassword","loginConfirmError","goHome","FormControl","error","InputLabel","Input","className","id","onClick","handleInputClick","onChange","e","target","FormHelperText","color","helperText","endAdornment","InputAdornment","position","IconButton","renderUsername","renderPassword","Button","variant","onMouseEnter","onMouseLeave","goSignup","React","Component","Home","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","name","link","chapter","season","episode","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","renderConfirm","goLogin","App","view","views","login","signup","home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bda3050.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport Visibility    from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:       '',\n      password:       '',\n\n      usernameError:  '',\n      passwordError:  '',\n\n      hidePassword: true,\n      loginButtonHover: false,\n      signupButtonHover: false,\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover   = this.handleHover.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type) {\n    this.setState({\n      loginButtonHover: type === 'login' ? !this.state.loginButtonHover : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? !this.state.signupButtonHover : this.state.signupButtonHover,\n    });\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username not taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ loginConfirmError: 'Incorrect password.' });\n      return;\n    }\n\n    this.props.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({\n      hidePassword: !this.state.hidePassword,\n    });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  render() {\n    return (\n      <div className='LoginSignup'>\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        <Button\n          className='button'\n          variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n          color='primary'\n          onClick={this.handleLoginClick}\n          onMouseEnter={ () => this.handleHover('login') }\n          onMouseLeave={ () => this.handleHover('login') }>\n            Login\n        </Button>\n\n        <br/><br/>\n\n        <Button\n          className='button'\n          variant={this.state.signupButtonHover ? 'outlined' : ''}\n          color='primary'\n          onClick={this.props.goSignup}\n          onMouseEnter={ () => this.handleHover('signup') }\n          onMouseLeave={ () => this.handleHover('signup') }>\n            Sign up\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        pog\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M\",\n  authDomain: \"anman-list.firebaseapp.com\",\n  databaseURL: \"https://anman-list-default-rtdb.firebaseio.com\",\n  projectId: \"anman-list\",\n  storageBucket: \"anman-list.appspot.com\",\n  messagingSenderId: \"763409917320\",\n  appId: \"1:763409917320:web:6034f95cf87d62d8b9463d\"\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  newManga(username, {name, link, chapter}) {\n    return\n  }\n\n  modifyManga(username, {name, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, name) {\n    return;\n  }\n\n  newAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  modifyAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  removeAnime(username, name) {\n    return;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nimport Visibility    from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword: true,\n      hideConfirm:  true,\n      signupButtonHover: false,\n      loginButtonHover: false,\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? !this.state.signupButtonHover : this.state.signupButtonHover,\n      loginButtonHover: type === 'login' ? !this.state.loginButtonHover : this.state.loginButtonHover,\n    });\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    this.props.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({\n      hidePassword: !this.state.hidePassword,\n    });\n  }\n\n  handleConfirmClick() {\n    this.setState({\n      hideConfirm: !this.state.hideConfirm,\n    });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          id='standard-basic'\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  render() {\n    return (\n      <div className='LoginSignup'>\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        <Button\n          className='button'\n          variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n          color='primary'\n          onClick={this.handleSignupClick}\n          onMouseEnter={ () => this.handleHover('signup') }\n          onMouseLeave={ () => this.handleHover('signup') }>\n            Sign up\n        </Button>\n\n        <br/><br/>\n\n        <Button\n          className='button'\n          variant={this.state.loginButtonHover ? 'outlined' : ''}\n          color='primary'\n          onClick={this.props.goLogin}\n          onMouseEnter={ () => this.handleHover('login') }\n          onMouseLeave={ () => this.handleHover('login') }>\n            Login\n        </Button>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport './App.css';\n\nimport Login from './views/Login';\nimport Home  from './views/Home';\n\nimport myServer from './server';\nimport Signup from './views/Signup';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: 'login',\n    };\n  }\n\n  render() {\n    const views = {\n      login: <Login\n                server={ myServer }\n                goHome={ () => this.setState({ view: 'home' }) }\n                goSignup={ () => this.setState({ view: 'signup' }) } />,\n\n      signup: <Signup\n                server={ myServer }\n                goHome={ () => this.setState({ view: 'home' }) }\n                goLogin={ () => this.setState({ view: 'login' }) } />,\n\n      home:  <Home\n                server={ myServer }\n                goLogin={ () => this.setState({ view: 'login' }) } />,\n    }\n    return (\n      <div className='App'>\n        {views[this.state.view]}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}