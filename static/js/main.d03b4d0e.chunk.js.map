{"version":3,"sources":["server.js","views/Login.js","views/Home.js","views/Signup.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","username","password","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","name","link","chapter","season","episode","Login","props","state","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","localStorage","getItem","logIn","setState","leavePage","goHome","bind","handleText","handleHover","handleKeyPress","handleLoginClick","handlePasswordClick","this","type","value","pos","e","key","server","userExists","verifyPassword","loginConfirmError","FormControl","error","InputLabel","Input","className","id","onClick","handleInputClick","onChange","target","FormHelperText","color","helperText","endAdornment","InputAdornment","position","IconButton","Button","variant","onMouseEnter","onMouseLeave","to","onKeyPress","Typography","renderUsername","renderPassword","renderLoginButton","renderSignupButton","React","Component","Home","signOut","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","renderConfirm","App","console","log","Boolean","updateUsername","newUsername","setItem","exact","path","u","theme","createMuiTheme","palette","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.d03b4d0e.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M\",\n  authDomain: \"anman-list.firebaseapp.com\",\n  databaseURL: \"https://anman-list-default-rtdb.firebaseio.com\",\n  projectId: \"anman-list\",\n  storageBucket: \"anman-list.appspot.com\",\n  messagingSenderId: \"763409917320\",\n  appId: \"1:763409917320:web:6034f95cf87d62d8b9463d\"\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  newManga(username, {name, link, chapter}) {\n    return\n  }\n\n  modifyManga(username, {name, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, name) {\n    return;\n  }\n\n  newAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  modifyAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  removeAnime(username, name) {\n    return;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n\n      usernameError: '',\n      passwordError: '',\n\n      hidePassword:      true,\n      loginButtonHover:  false,\n      signupButtonHover: false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    this.goHome              = this.goHome.bind(this);\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  goHome() {\n    this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleLoginClick();\n    }\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username not taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ loginConfirmError: 'Incorrect password.' });\n      return;\n    }\n\n    this.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleLoginClick}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'signup' }) }\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign Up\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          LOGIN\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Home.css';\n\nimport Button from '@material-ui/core/Button';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.signOut = this.signOut.bind(this);\n  }\n\n  signOut() {\n    this.props.signOut('');\n  }\n\n  render() {\n    if (!this.props.username) {\n      return <Redirect to='login' />;\n    }\n\n    return (\n      <div className='Home'>\n        <Button variant='outlined' color='primary' onClick={this.signOut}>Sign Out</Button>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword:      true,\n      hideConfirm:       true,\n      signupButtonHover: false,\n      loginButtonHover:  false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    this.goHome              = this.goHome.bind(this);\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  goHome() {\n    this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSignupClick();\n    }\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    this.props.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  handleConfirmClick() {\n    this.setState({ hideConfirm: !this.state.hideConfirm });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          id='standard-basic'\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleSignupClick}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'login' }) }\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          SIGN UP\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport myServer from './server';\nimport Login    from './views/Login';\nimport Home     from './views/Home';\nimport Signup   from './views/Signup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: localStorage.getItem('username'),\n    };\n\n    console.log(Boolean(this.state.username));\n\n    this.updateUsername = this.updateUsername.bind(this);\n  }\n\n  updateUsername(newUsername) {\n    this.setState({ username: newUsername });\n    localStorage.setItem('username', newUsername);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/login'>\n              <Login server={ myServer } logIn={ (u) => this.updateUsername(u) }/>\n            </Route>\n            <Route path='/signup'>\n              <Signup server={ myServer } logIn={ (u) => this.updateUsername(u) }/>\n            </Route>\n            <Route path='/'>\n              <Home server={ myServer } username={this.state.username} signOut={ (u) => this.updateUsername(u) }/>\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#1C1F22',\n    }\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}