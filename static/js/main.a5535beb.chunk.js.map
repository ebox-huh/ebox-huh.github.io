{"version":3,"sources":["views/Login.js","views/Home.js","server.js","views/Signup.js","App.js","index.js"],"names":["Login","props","state","username","password","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","handleText","bind","handleHover","handleKeyPress","handleLoginClick","handlePasswordClick","type","value","this","setState","pos","e","key","server","userExists","verifyPassword","loginConfirmError","goHome","FormControl","error","InputLabel","Input","className","id","onClick","handleInputClick","onChange","target","FormHelperText","color","helperText","endAdornment","InputAdornment","position","IconButton","Button","variant","onMouseEnter","onMouseLeave","goSignup","onKeyPress","Typography","renderUsername","renderPassword","renderLoginButton","renderSignupButton","React","Component","Home","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","name","link","chapter","season","episode","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","goLogin","renderConfirm","App","view","views","login","signup","home","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5535beb.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n\n      usernameError: '',\n      passwordError: '',\n\n      hidePassword:      true,\n      loginButtonHover:  false,\n      signupButtonHover: false,\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      loginButtonHover:  type === 'login' ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleLoginClick();\n    }\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username not taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ loginConfirmError: 'Incorrect password.' });\n      return;\n    }\n\n    this.props.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({\n      hidePassword: !this.state.hidePassword,\n    });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleLoginClick}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={this.props.goSignup}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  render() {\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          LOGIN\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        pog\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M\",\n  authDomain: \"anman-list.firebaseapp.com\",\n  databaseURL: \"https://anman-list-default-rtdb.firebaseio.com\",\n  projectId: \"anman-list\",\n  storageBucket: \"anman-list.appspot.com\",\n  messagingSenderId: \"763409917320\",\n  appId: \"1:763409917320:web:6034f95cf87d62d8b9463d\"\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  newManga(username, {name, link, chapter}) {\n    return\n  }\n\n  modifyManga(username, {name, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, name) {\n    return;\n  }\n\n  newAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  modifyAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  removeAnime(username, name) {\n    return;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword:      true,\n      hideConfirm:       true,\n      signupButtonHover: false,\n      loginButtonHover:  false,\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSignupClick();\n    }\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    this.props.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({\n      hidePassword: !this.state.hidePassword,\n    });\n  }\n\n  handleConfirmClick() {\n    this.setState({\n      hideConfirm: !this.state.hideConfirm,\n    });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          id='standard-basic'\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleSignupClick}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={this.props.goLogin}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  render() {\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          SIGN UP\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport './App.css';\n\nimport Login from './views/Login';\nimport Home  from './views/Home';\n\nimport myServer from './server';\nimport Signup from './views/Signup';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      view: 'login',\n    };\n  }\n\n  render() {\n    const views = {\n      login: <Login\n                server={ myServer }\n                goHome={ () => this.setState({ view: 'home' }) }\n                goSignup={ () => this.setState({ view: 'signup' }) } />,\n\n      signup: <Signup\n                server={ myServer }\n                goHome={ () => this.setState({ view: 'home' }) }\n                goLogin={ () => this.setState({ view: 'login' }) } />,\n\n      home:  <Home\n                server={ myServer }\n                goLogin={ () => this.setState({ view: 'login' }) } />,\n    }\n    return (\n      <div className='App'>\n        {views[this.state.view]}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}