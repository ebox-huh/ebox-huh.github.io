{"version":3,"sources":["server.js","views/Login.js","views/Home.js","views/Signup.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","username","password","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","name","link","chapter","season","episode","Login","props","state","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","localStorage","getItem","logIn","window","location","href","goHome","bind","handleText","handleHover","handleKeyPress","handleLoginClick","handlePasswordClick","this","type","value","setState","pos","e","key","server","userExists","verifyPassword","loginConfirmError","FormControl","error","InputLabel","Input","className","id","onClick","handleInputClick","onChange","target","FormHelperText","color","helperText","endAdornment","InputAdornment","position","IconButton","Button","variant","onMouseEnter","onMouseLeave","onKeyPress","Typography","renderUsername","renderPassword","renderLoginButton","renderSignupButton","React","Component","Home","removeItem","signOut","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","renderConfirm","App","setItem","exact","path","u","theme","createMuiTheme","palette","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"wXAGAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,iDACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAET,IAAMC,EAAKT,IAASU,WA0DLC,EADE,I,gGArDPC,EAAUC,GAChBJ,EAAGK,IAAI,cAAcC,OAArB,eACGH,EAAWI,IAAOH,O,0EAKND,G,uFAETH,EAAGK,IAAH,oBAAoBF,IAAYK,KAAK,SAAS,SAAAC,GAClDC,EAASD,EAASC,Y,gCAEbA,G,gLAGYP,EAAUC,G,uFAEvBJ,EAAGK,IAAH,oBAAoBF,IAAYK,KAAK,SAAS,SAAAC,GAClDE,EAAOF,EAASG,S,gCAEXL,IAAOH,KAAcO,G,yIAGfR,EAAUU,EAAaC,M,+BAI7BX,E,GAAiC,EAAtBY,KAAsB,EAAhBC,KAAgB,EAAVC,U,kCAIpBd,E,GAAiC,EAAtBY,KAAsB,EAAhBC,KAAgB,EAAVC,U,kCAIvBd,EAAUY,M,+BAIbZ,E,GAAyC,EAA9BY,KAA8B,EAAxBC,KAAwB,EAAlBE,OAAkB,EAAVC,U,kCAI5BhB,E,GAAyC,EAA9BY,KAA8B,EAAxBC,KAAwB,EAAlBE,OAAkB,EAAVC,U,kCAI/BhB,EAAUY,Q,gHCsITK,G,wDApLb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXnB,SAAe,GACfC,SAAe,GAEfmB,cAAe,GACfC,cAAe,GAEfC,cAAmB,EACnBC,kBAAmB,EACnBC,mBAAmB,GAGjBC,aAAaC,QAAQ,cACvB,EAAKR,MAAMS,MAAMF,aAAaC,QAAQ,aACtCE,OAAOC,SAASC,KAAO,SAGzB,EAAKC,OAAsB,EAAKA,OAAOC,KAAZ,gBAC3B,EAAKC,WAAsB,EAAKA,WAAWD,KAAhB,gBAC3B,EAAKE,YAAsB,EAAKA,YAAYF,KAAjB,gBAC3B,EAAKG,eAAsB,EAAKA,eAAeH,KAApB,gBAC3B,EAAKI,iBAAsB,EAAKA,iBAAiBJ,KAAtB,gBAC3B,EAAKK,oBAAsB,EAAKA,oBAAoBL,KAAzB,gBAzBV,E,qDA6BjBM,KAAKpB,MAAMS,MAAMW,KAAKnB,MAAMnB,UAC5B4B,OAAOC,SAASC,KAAO,U,iCAGdS,EAAMC,GAAQ,IAAD,EACtBF,KAAKG,UAAL,mBACGF,EAAOC,GADV,8BAE0B,aAATD,GAA8BD,KAAKnB,MAAMC,eAF1D,8BAG0B,aAATmB,GAA8BD,KAAKnB,MAAME,eAH1D,M,uCAOekB,GACfD,KAAKG,SAAS,CACZrB,cAAwB,aAATmB,GAA8BD,KAAKnB,MAAMC,cACxDC,cAAwB,aAATkB,GAA8BD,KAAKnB,MAAME,kB,kCAIhDkB,EAAMG,GAChBJ,KAAKG,SAAS,CACZlB,iBAA4B,UAATgB,EAA6B,OAARG,EAA+BJ,KAAKnB,MAAMI,iBAClFC,kBAA4B,WAATe,EAA6B,OAARG,EAA+BJ,KAAKnB,MAAMK,sB,qCAIvEmB,GACC,UAAVA,EAAEC,KACJN,KAAKF,qB,sJAKqB,KAAxBE,KAAKnB,MAAMnB,S,uBACbsC,KAAKG,SAAS,CAAErB,cAAe,sB,0CAEdkB,KAAKpB,MAAM2B,OAAOC,WAAWR,KAAKnB,MAAMnB,U,yCACzDsC,KAAKG,SAAS,CAAErB,cAAe,wB,8BAIL,KAAxBkB,KAAKnB,MAAMlB,S,wBACbqC,KAAKG,SAAS,CAAEpB,cAAe,sB,4CAEdiB,KAAKpB,MAAM2B,OAAOE,eAAeT,KAAKnB,MAAMnB,SAAUsC,KAAKnB,MAAMlB,U,0CAClFqC,KAAKG,SAAS,CAAEO,kBAAmB,wB,2BAIrCV,KAAKP,S,mJAILO,KAAKG,SAAS,CAAEnB,cAAegB,KAAKnB,MAAMG,iB,uCAG1B,IAAD,OACf,OACE,eAAC2B,EAAA,EAAD,CAAaC,MAAOZ,KAAKnB,MAAMC,cAA/B,UACE,cAAC+B,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,CACEC,UAAU,QACVC,GAAG,iBACHd,MAAOF,KAAKnB,MAAMnB,SAClBuD,QAAU,kBAAM,EAAKC,iBAAiB,aACtCC,SAAU,SAAAd,GAAC,OAAI,EAAKV,WAAW,WAAYU,EAAEe,OAAOlB,UACtD,cAACmB,EAAA,EAAD,CAAgBC,MAAM,YAAtB,SAAmCtB,KAAKnB,MAAMC,cAAgBkB,KAAKnB,MAAMC,cAAgB,W,uCAK7E,IAAD,OACf,OACE,eAAC6B,EAAA,EAAD,CAAaC,MAAOZ,KAAKnB,MAAME,cAA/B,UACE,cAAC8B,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,CACEC,UAAU,QACVH,MAAOZ,KAAKnB,MAAME,cAClBiC,GAAG,iBACHf,KAAMD,KAAKnB,MAAMG,aAAe,WAAa,OAC7CkB,MAAOF,KAAKnB,MAAMlB,SAClB4D,WAAYvB,KAAKnB,MAAME,cACvBkC,QAAU,kBAAM,EAAKC,iBAAiB,aACtCC,SAAU,SAAAd,GAAC,OAAI,EAAKV,WAAW,WAAYU,EAAEe,OAAOlB,QACpDsB,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CAAYV,QAASjB,KAAKD,oBAA1B,SACGC,KAAKnB,MAAMG,aAAe,cAAC,IAAD,IAAoB,cAAC,IAAD,UAGvD,cAACqC,EAAA,EAAD,CAAgBC,MAAM,YAAtB,SAAmCtB,KAAKnB,MAAME,cAAgBiB,KAAKnB,MAAME,cAAgB,W,0CAK1E,IAAD,OAClB,OACE,cAAC6C,EAAA,EAAD,CACEb,UAAU,SACVc,QAAS7B,KAAKnB,MAAMI,iBAAmB,YAAc,WACrDqC,MAAM,UACNL,QAASjB,KAAKF,iBACdgC,aAAe,kBAAM,EAAKlC,YAAY,QAAS,OAC/CmC,aAAe,kBAAM,EAAKnC,YAAY,QAAS,QANjD,qB,2CAYkB,IAAD,OACnB,OACE,cAACgC,EAAA,EAAD,CACEb,UAAU,SACVc,QAAS7B,KAAKnB,MAAMK,kBAAoB,WAAa,GACrDoC,MAAM,UACNL,QAAU,kBAAM3B,OAAOC,SAASC,KAAO,WACvCsC,aAAe,kBAAM,EAAKlC,YAAY,SAAU,OAChDmC,aAAe,kBAAM,EAAKnC,YAAY,SAAU,QANlD,uB,+BAaF,OACE,sBAAKmB,UAAU,cAAciB,WAAYhC,KAAKH,eAA9C,UACE,cAACoC,EAAA,EAAD,CAAYJ,QAAQ,KAApB,mBAIA,uBAEC7B,KAAKkC,iBAEN,uBAAK,uBAEJlC,KAAKmC,iBAEN,uBAAK,uBAEJnC,KAAKoC,oBAEN,uBAAK,uBAEJpC,KAAKqC,4B,GA9KMC,IAAMC,YCSXC,G,wDAlBb,WAAY5D,GAAQ,uCACZA,G,sDAINO,aAAasD,WAAW,YACxBnD,OAAOC,SAASC,KAAO,M,+BAIvB,OACE,qBAAKuB,UAAU,OAAf,SACE,cAACa,EAAA,EAAD,CAAQC,QAAQ,WAAWP,MAAM,UAAUL,QAASjB,KAAK0C,QAAzD,4B,GAbWJ,IAAMC,YCqOVI,E,kDA1Nb,WAAY/D,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXnB,SAAe,GACfC,SAAe,GACfiF,QAAe,GAEf9D,cAAe,GACfC,cAAe,GACf8D,aAAe,GAEf7D,cAAmB,EACnB8D,aAAmB,EACnB5D,mBAAmB,EACnBD,kBAAmB,GAGjBE,aAAaC,QAAQ,cACvB,EAAKR,MAAMS,MAAMF,aAAaC,QAAQ,aACtCE,OAAOC,SAASC,KAAO,SAGzB,EAAKC,OAAsB,EAAKA,OAAOC,KAAZ,gBAC3B,EAAKC,WAAsB,EAAKA,WAAWD,KAAhB,gBAC3B,EAAKE,YAAsB,EAAKA,YAAYF,KAAjB,gBAC3B,EAAKG,eAAsB,EAAKA,eAAeH,KAApB,gBAC3B,EAAKqD,kBAAsB,EAAKA,kBAAkBrD,KAAvB,gBAC3B,EAAKK,oBAAsB,EAAKA,oBAAoBL,KAAzB,gBAC3B,EAAKsD,mBAAsB,EAAKA,mBAAmBtD,KAAxB,gBA7BV,E,qDAiCjBM,KAAKpB,MAAMS,MAAMW,KAAKnB,MAAMnB,UAC5B4B,OAAOC,SAASC,KAAO,U,iCAGdS,EAAMC,GAAQ,IAAD,EACtBF,KAAKG,UAAL,mBACGF,EAAOC,GADV,8BAE0B,aAATD,GAA8BD,KAAKnB,MAAMC,eAF1D,8BAG0B,aAATmB,GAA8BD,KAAKnB,MAAME,eAH1D,6BAI0B,YAATkB,GAA8BD,KAAKnB,MAAMgE,cAJ1D,M,uCAQe5C,GACfD,KAAKG,SAAS,CACZrB,cAAwB,aAATmB,GAA8BD,KAAKnB,MAAMC,cACxDC,cAAwB,aAATkB,GAA8BD,KAAKnB,MAAME,cACxD8D,aAAwB,YAAT5C,GAA8BD,KAAKnB,MAAMgE,iB,kCAIhD5C,EAAMG,GAChBJ,KAAKG,SAAS,CACZjB,kBAA4B,WAATe,EAA6B,OAARG,EAA+BJ,KAAKnB,MAAMK,kBAClFD,iBAA4B,UAATgB,EAA6B,OAARG,EAA+BJ,KAAKnB,MAAMI,qB,qCAIvEoB,GACC,UAAVA,EAAEC,KACJN,KAAK+C,sB,uJAKqB,KAAxB/C,KAAKnB,MAAMnB,S,uBACbsC,KAAKG,SAAS,CAAErB,cAAe,sB,0CAEhBkB,KAAKpB,MAAM2B,OAAOC,WAAWR,KAAKnB,MAAMnB,U,0CACvDsC,KAAKG,SAAS,CAAErB,cAAe,4B,8BAIL,KAAxBkB,KAAKnB,MAAMlB,S,wBACbqC,KAAKG,SAAS,CAAEpB,cAAe,sB,8BAEtBiB,KAAKnB,MAAMlB,WAAaqC,KAAKnB,MAAM+D,Q,wBAC5C5C,KAAKG,SAAS,CAAE0C,aAAc,2B,2BAIhC7C,KAAKpB,MAAM2B,OAAO0C,QAAQjD,KAAKnB,MAAMnB,SAAUsC,KAAKnB,MAAMlB,UAC1DqC,KAAKpB,MAAMa,S,mJAIXO,KAAKG,SAAS,CAAEnB,cAAegB,KAAKnB,MAAMG,iB,2CAI1CgB,KAAKG,SAAS,CAAE2C,aAAc9C,KAAKnB,MAAMiE,gB,uCAGzB,IAAD,OACf,OACE,eAACnC,EAAA,EAAD,CAAaC,MAAOZ,KAAKnB,MAAMC,cAA/B,UACE,cAAC+B,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,CACEC,UAAU,QACVC,GAAG,iBACHd,MAAOF,KAAKnB,MAAMnB,SAClBuD,QAAU,kBAAM,EAAKC,iBAAiB,aACtCC,SAAU,SAAAd,GAAC,OAAI,EAAKV,WAAW,WAAYU,EAAEe,OAAOlB,UACtD,cAACmB,EAAA,EAAD,CAAgBC,MAAM,YAAtB,SAAmCtB,KAAKnB,MAAMC,cAAgBkB,KAAKnB,MAAMC,cAAgB,W,uCAK7E,IAAD,OACf,OACE,eAAC6B,EAAA,EAAD,CAAaC,MAAOZ,KAAKnB,MAAME,cAA/B,UACE,cAAC8B,EAAA,EAAD,uBACA,cAACC,EAAA,EAAD,CACEC,UAAU,QACVH,MAAOZ,KAAKnB,MAAME,cAClBiC,GAAG,iBACHf,KAAMD,KAAKnB,MAAMG,aAAe,WAAa,OAC7CkB,MAAOF,KAAKnB,MAAMlB,SAClB4D,WAAYvB,KAAKnB,MAAME,cACvBkC,QAAU,kBAAM,EAAKC,iBAAiB,aACtCC,SAAU,SAAAd,GAAC,OAAI,EAAKV,WAAW,WAAYU,EAAEe,OAAOlB,QACpDsB,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CAAYV,QAASjB,KAAKD,oBAA1B,SACGC,KAAKnB,MAAMG,aAAe,cAAC,IAAD,IAAoB,cAAC,IAAD,UAGvD,cAACqC,EAAA,EAAD,CAAgBC,MAAM,YAAtB,SAAmCtB,KAAKnB,MAAME,cAAgBiB,KAAKnB,MAAME,cAAgB,W,sCAK9E,IAAD,OACd,OACE,eAAC4B,EAAA,EAAD,CAAaC,MAAOZ,KAAKnB,MAAMgE,aAA/B,UACE,cAAChC,EAAA,EAAD,+BACA,cAACC,EAAA,EAAD,CACEC,UAAU,QACVH,MAAOZ,KAAKnB,MAAMgE,aAClB7B,GAAG,iBACHf,KAAMD,KAAKnB,MAAMiE,YAAc,WAAa,OAC5C5C,MAAOF,KAAKnB,MAAM+D,QAClBrB,WAAYvB,KAAKnB,MAAMgE,aACvB5B,QAAU,kBAAM,EAAKC,iBAAiB,YACtCC,SAAU,SAAAd,GAAC,OAAI,EAAKV,WAAW,UAAWU,EAAEe,OAAOlB,QACnDsB,aACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,EAAA,EAAD,CAAYV,QAASjB,KAAKgD,mBAA1B,SACGhD,KAAKnB,MAAMiE,YAAc,cAAC,IAAD,IAAoB,cAAC,IAAD,UAGtD,cAACzB,EAAA,EAAD,CAAgBC,MAAM,YAAtB,SAAmCtB,KAAKnB,MAAMgE,aAAe7C,KAAKnB,MAAMgE,aAAe,W,2CAKvE,IAAD,OACnB,OACE,cAACjB,EAAA,EAAD,CACEb,UAAU,SACVc,QAAS7B,KAAKnB,MAAMK,kBAAoB,YAAc,WACtDoC,MAAM,UACNL,QAASjB,KAAK+C,kBACdjB,aAAe,kBAAM,EAAKlC,YAAY,SAAU,OAChDmC,aAAe,kBAAM,EAAKnC,YAAY,SAAU,QANlD,uB,0CAYiB,IAAD,OAClB,OACE,cAACgC,EAAA,EAAD,CACEb,UAAU,SACVc,QAAS7B,KAAKnB,MAAMI,iBAAmB,WAAa,GACpDqC,MAAM,UACNL,QAAU,kBAAM3B,OAAOC,SAASC,KAAO,KACvCsC,aAAe,kBAAM,EAAKlC,YAAY,QAAS,OAC/CmC,aAAe,kBAAM,EAAKnC,YAAY,QAAS,QANjD,qB,+BAaF,OACE,sBAAKmB,UAAU,cAAciB,WAAYhC,KAAKH,eAA9C,UACE,cAACoC,EAAA,EAAD,CAAYJ,QAAQ,KAApB,qBAIA,uBAEC7B,KAAKkC,iBAEN,uBAAK,uBAEJlC,KAAKmC,iBAEN,uBAAK,uBAEJnC,KAAKkD,gBAEN,uBAAK,uBAEJlD,KAAKqC,qBAEN,uBAAK,uBAEJrC,KAAKoC,2B,GArNOE,IAAMC,WCmCZY,E,kDAxCb,WAAYvE,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXnB,SAAU,KAGP,EAAKmB,MAAMnB,UAAYyB,aAAaC,QAAQ,cAC/C,EAAKP,MAAQ,CAAEnB,SAAUyB,aAAaC,QAAQ,cAGhD,EAAKC,MAAQ,EAAKA,MAAMK,KAAX,gBAXI,E,kDAcbhC,GACJsC,KAAKG,SAAS,CAAEzC,SAAUA,IAC1ByB,aAAaiE,QAAQ,WAAY1F,K,+BAGzB,IAAD,OACP,OACE,cAAC,IAAD,UACE,qBAAKqD,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAO/C,OAAS9C,EAAW4B,MAAQ,SAACkE,GAAD,OAAO,EAAKlE,MAAMkE,QAEvD,cAAC,IAAD,CAAOD,KAAK,UAAZ,SACE,cAAC,EAAD,CAAQ/C,OAAS9C,EAAW4B,MAAQ,SAACkE,GAAD,OAAO,EAAKlE,MAAMkE,QAExD,cAAC,IAAD,CAAOD,KAAK,QAAZ,SACE,cAAC,EAAD,CAAM/C,OAAS9C,EAAWC,SAAUsC,KAAKnB,MAAMnB,wB,GAhC3C4E,IAAMC,W,0BCFlBiB,EAAQC,YAAe,CAC3BC,QAAS,CACPzD,KAAM,OACN0D,WAAY,CACVC,QAAS,cAKfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAACC,EAAA,EAAD,CAAeR,MAAOA,EAAtB,UACE,cAACS,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.f27c539a.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M\",\n  authDomain: \"anman-list.firebaseapp.com\",\n  databaseURL: \"https://anman-list-default-rtdb.firebaseio.com\",\n  projectId: \"anman-list\",\n  storageBucket: \"anman-list.appspot.com\",\n  messagingSenderId: \"763409917320\",\n  appId: \"1:763409917320:web:6034f95cf87d62d8b9463d\"\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  newManga(username, {name, link, chapter}) {\n    return\n  }\n\n  modifyManga(username, {name, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, name) {\n    return;\n  }\n\n  newAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  modifyAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  removeAnime(username, name) {\n    return;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n\n      usernameError: '',\n      passwordError: '',\n\n      hidePassword:      true,\n      loginButtonHover:  false,\n      signupButtonHover: false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      window.location.href = '/home';\n    }\n\n    this.goHome              = this.goHome.bind(this);\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  goHome() {\n    this.props.logIn(this.state.username);\n    window.location.href = '/home';\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleLoginClick();\n    }\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username not taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ loginConfirmError: 'Incorrect password.' });\n      return;\n    }\n\n    this.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleLoginClick}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => window.location.href = '/signup' }\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign Up\n      </Button>\n    );\n  }\n\n  render() {\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          LOGIN\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\n\nimport './Home.css';\n\nimport Button from '@material-ui/core/Button';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  signOut() {\n    localStorage.removeItem('username');\n    window.location.href = '/';\n  }\n\n  render() {\n    return (\n      <div className='Home'>\n        <Button variant='outlined' color='primary' onClick={this.signOut}>Sign Out</Button>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword:      true,\n      hideConfirm:       true,\n      signupButtonHover: false,\n      loginButtonHover:  false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      window.location.href = '/home';\n    }\n\n    this.goHome              = this.goHome.bind(this);\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  goHome() {\n    this.props.logIn(this.state.username);\n    window.location.href = '/home';\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSignupClick();\n    }\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    this.props.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  handleConfirmClick() {\n    this.setState({ hideConfirm: !this.state.hideConfirm });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          id='standard-basic'\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleSignupClick}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => window.location.href = '/' }\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  render() {\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          SIGN UP\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport './App.css';\n\nimport myServer from './server';\nimport Login    from './views/Login';\nimport Home     from './views/Home';\nimport Signup   from './views/Signup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n    };\n\n    if (!this.state.username && localStorage.getItem('username')) {\n      this.state = { username: localStorage.getItem('username') };\n    }\n\n    this.logIn = this.logIn.bind(this);\n  }\n\n  logIn(username) {\n    this.setState({ username: username });\n    localStorage.setItem('username', username);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/'>\n              <Login server={ myServer } logIn={ (u) => this.logIn(u) }/>\n            </Route>\n            <Route path='/signup'>\n              <Signup server={ myServer } logIn={ (u) => this.logIn(u) }/>\n            </Route>\n            <Route path=\"/home\">\n              <Home server={ myServer } username={this.state.username} />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#1C1F22',\n    }\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}