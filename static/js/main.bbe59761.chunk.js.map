{"version":3,"sources":["server.js","views/Login.js","views/Home.js","views/Signup.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","username","password","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","currentToken","token","key32","window","crypto","getRandomValues","Uint32Array","i","length","toString","realToken","name","link","chapter","season","episode","Login","props","state","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","localStorage","getItem","logIn","setState","leavePage","handleText","bind","handleHover","handleKeyPress","handleLoginClick","handlePasswordClick","this","isValid","type","value","pos","e","key","server","userExists","verifyPassword","FormControl","error","InputLabel","Input","className","id","onClick","handleInputClick","onChange","target","FormHelperText","color","helperText","endAdornment","InputAdornment","position","IconButton","Button","variant","onMouseEnter","onMouseLeave","to","onKeyPress","Typography","renderUsername","renderPassword","renderLoginButton","renderSignupButton","React","Component","Home","handleSignOutClick","nextProps","nextState","signOut","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","renderConfirm","App","isValidSession","generateToken","setItem","destroyToken","removeItem","verifyToken","exact","path","u","theme","createMuiTheme","palette","background","default","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.bbe59761.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: 'AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M',\n  authDomain: 'anman-list.firebaseapp.com',\n  databaseURL: 'https://anman-list-default-rtdb.firebaseio.com',\n  projectId: 'anman-list',\n  storageBucket: 'anman-list.appspot.com',\n  messagingSenderId: '763409917320',\n  appId: '1:763409917320:web:6034f95cf87d62d8b9463d'\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  async generateToken(username) {\n    let currentToken;\n    await db.ref(`tokens/${username}`).once('value', snapshot => {\n      currentToken = snapshot.val();\n    });\n    if (currentToken) {\n      return currentToken;\n    }\n\n    let token = '';\n    const key32 = window.crypto.getRandomValues(new Uint32Array(4));\n\t\tfor (let i = 0; i < key32.length; i++) {\n\t\t\ttoken += (i > 0) ? '-' : '';\n\t\t\ttoken += key32[i].toString(16);\n    }\n\n    db.ref('tokens/').update({\n      [username]: token\n    });\n    return token;\n  }\n\n  async verifyToken(username, token) {\n    if (!username) {\n      return false;\n    }\n\n    let realToken;\n    await db.ref(`tokens/${username}`).once('value', snapshot => {\n      realToken = snapshot.val();\n    });\n\n    return realToken === token;\n  }\n\n  destroyToken(username) {\n    db.ref('tokens/').update({\n      [username]: null\n    });\n  }\n\n  newManga(username, {name, link, chapter}) {\n    return\n  }\n\n  modifyManga(username, {name, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, name) {\n    return;\n  }\n\n  newAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  modifyAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  removeAnime(username, name) {\n    return;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n\n      usernameError: '',\n      passwordError: '',\n\n      hidePassword:      true,\n      loginButtonHover:  false,\n      signupButtonHover: false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  async componentDidMount() {\n    if (await this.props.isValid()) {\n      this.setState({ leavePage: '/' });\n    }\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleLoginClick();\n    }\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username does not exist.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ passwordError: 'Incorrect password.' });\n      return;\n    }\n\n    await this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleLoginClick}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'signup' }) }\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign Up\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          LOGIN\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport './Home.css';\n\nimport Button from '@material-ui/core/Button';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n\n    if (!this.props.username || !this.props.token) {\n      this.state = { leavePage: 'login' };\n    }\n\n    this.handleSignOutClick = this.handleSignOutClick.bind(this);\n  }\n\n  async shouldComponentUpdate(nextProps, nextState) {\n    if (!await nextProps.isValid()) {\n      this.setState({ leavePage: 'login' });\n    }\n    return true;\n  }\n\n  handleSignOutClick() {\n    this.props.signOut();\n    this.setState({ leavePage: 'login' });\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='Home'>\n        <Button variant='outlined' color='primary' onClick={this.handleSignOutClick}>Sign Out</Button>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword:      true,\n      hideConfirm:       true,\n      signupButtonHover: false,\n      loginButtonHover:  false,\n    };\n\n    if (localStorage.getItem('username')) {\n      this.props.logIn(localStorage.getItem('username'));\n      this.setState({ leavePage: '/' });\n    }\n\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  async componentDidMount() {\n    if (await this.props.isValid()) {\n      this.setState({ leavePage: '/' });\n    }\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSignupClick();\n    }\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    await this.props.logIn(this.state.username);\n    this.setState({ leavePage: '/' });\n  }\n\n  handlePasswordClick() {\n    this.setState({ hidePassword: !this.state.hidePassword });\n  }\n\n  handleConfirmClick() {\n    this.setState({ hideConfirm: !this.state.hideConfirm });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          id='standard-basic'\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleSignupClick}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={ () => this.setState({ leavePage: 'login' }) }\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.leavePage) {\n      return <Redirect to={this.state.leavePage} />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          SIGN UP\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport './App.css';\n\nimport myServer from './server';\nimport Login    from './views/Login';\nimport Home     from './views/Home';\nimport Signup   from './views/Signup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: localStorage.getItem('username'),\n      token: localStorage.getItem('token'),\n    };\n\n    this.logIn          = this.logIn.bind(this);\n    this.signOut        = this.signOut.bind(this);\n    this.isValidSession = this.isValidSession.bind(this);\n  }\n\n  async componentDidMount() {\n    if (this.isValidSession()) {\n\n    }\n  }\n\n  async logIn(username) {\n    const token = await myServer.generateToken(username);\n    this.setState({\n      username: username,\n      token: token,\n    });\n    localStorage.setItem('username', username);\n    localStorage.setItem('token', token);\n  }\n\n  signOut() {\n    myServer.destroyToken(this.state.username);\n    this.setState({\n      username: '',\n      token: '',\n    });\n    localStorage.removeItem('username');\n    localStorage.removeItem('token');\n  }\n\n  async isValidSession() {\n    return await myServer.verifyToken(this.state.username, this.state.token);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/'>\n              <Home\n                server={ myServer }\n                username={this.state.username}\n                token={this.state.token}\n                signOut={ () => this.signOut() }\n                isValid={this.isValidSession}/>\n            </Route>\n            <Route path='/login'>\n              <Login\n                server={ myServer }\n                logIn={ (u) => this.logIn(u) }\n                isValid={this.isValidSession} />\n            </Route>\n            <Route path='/signup'>\n              <Signup\n                server={ myServer }\n                logIn={ (u) => this.logIn(u) }\n                isValid={this.isValidSession} />\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#1C1F22',\n    }\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}