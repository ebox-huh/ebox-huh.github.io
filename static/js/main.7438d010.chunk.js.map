{"version":3,"sources":["views/Login.js","views/Home.js","server.js","views/Signup.js","App.js","index.js"],"names":["Login","props","state","username","password","usernameError","passwordError","hidePassword","loginButtonHover","signupButtonHover","goHome","bind","handleText","handleHover","handleKeyPress","handleLoginClick","handlePasswordClick","this","logIn","setState","toHome","type","value","pos","e","key","server","userExists","verifyPassword","loginConfirmError","FormControl","error","InputLabel","Input","className","id","onClick","handleInputClick","onChange","target","FormHelperText","color","helperText","endAdornment","InputAdornment","position","IconButton","Button","variant","onMouseEnter","onMouseLeave","to","onKeyPress","Typography","renderUsername","renderPassword","renderLoginButton","renderSignupButton","React","Component","Home","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","myServer","ref","update","sha256","once","snapshot","exists","hash","val","oldPassword","newPassword","name","link","chapter","season","episode","Signup","confirm","confirmError","hideConfirm","handleSignupClick","handleConfirmClick","newUser","goLogin","renderConfirm","App","exact","path","u","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7438d010.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n\n      usernameError: '',\n      passwordError: '',\n\n      hidePassword:      true,\n      loginButtonHover:  false,\n      signupButtonHover: false,\n    }\n\n    this.goHome              = this.goHome.bind(this);\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleLoginClick    = this.handleLoginClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n  }\n\n  goHome() {\n    this.props.logIn(this.state.username);\n    this.setState({ toHome: true });\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      loginButtonHover:  type === 'login' ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleLoginClick();\n    }\n  }\n\n  async handleLoginClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (!(await this.props.server.userExists(this.state.username))) {\n      this.setState({ usernameError: 'Username not taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (!(await this.props.server.verifyPassword(this.state.username, this.state.password))) {\n      this.setState({ loginConfirmError: 'Incorrect password.' });\n      return;\n    }\n\n    this.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({\n      hidePassword: !this.state.hidePassword,\n    });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleLoginClick}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          Login\n      </Button>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'outlined' : ''}\n        color='primary'\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          <Link className='link' to='/signup'>Sign up</Link>\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.toHome) {\n      return <Redirect to='home'/>;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          LOGIN\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    if (!this.props.username) {\n      return <Redirect to=''/>;\n    }\n\n    return (\n      <div>\n        pog\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import firebase from 'firebase';\nimport sha256   from 'js-sha256';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBeotHm7O-r4F2YUedhn9WMZrTI5U0Hs_M\",\n  authDomain: \"anman-list.firebaseapp.com\",\n  databaseURL: \"https://anman-list-default-rtdb.firebaseio.com\",\n  projectId: \"anman-list\",\n  storageBucket: \"anman-list.appspot.com\",\n  messagingSenderId: \"763409917320\",\n  appId: \"1:763409917320:web:6034f95cf87d62d8b9463d\"\n});\nconst db = firebase.database();\n\n\nclass server {\n  newUser(username, password) {\n    db.ref('passwords/').update({\n      [username]: sha256(password)\n    });\n    return;\n  }\n\n  async userExists(username) {\n    let exists;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      exists = snapshot.exists();\n    });\n    return exists\n  }\n\n  async verifyPassword(username, password) {\n    let hash;\n    await db.ref(`passwords/${username}`).once('value', snapshot => {\n      hash = snapshot.val();\n    });\n    return sha256(password) === hash;\n  }\n\n  modifyPassword(username, oldPassword, newPassword) {\n    return;\n  }\n\n  newManga(username, {name, link, chapter}) {\n    return\n  }\n\n  modifyManga(username, {name, link, chapter}) {\n    return;\n  }\n\n  removeManga(username, name) {\n    return;\n  }\n\n  newAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  modifyAnime(username, {name, link, season, episode}) {\n    return;\n  }\n\n  removeAnime(username, name) {\n    return;\n  }\n}\n\n\nconst myServer = new server()\nexport default myServer;\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport Button         from '@material-ui/core/Button';\nimport IconButton     from '@material-ui/core/IconButton';\nimport Input          from '@material-ui/core/Input';\nimport InputLabel     from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl    from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Typography     from '@material-ui/core/Typography';\n\n\nimport Visibility     from '@material-ui/icons/Visibility';\nimport VisibilityOff  from '@material-ui/icons/VisibilityOff';\n\nimport './LoginSignup.css';\n\n\nclass Signup extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username:      '',\n      password:      '',\n      confirm:       '',\n\n      usernameError: '',\n      passwordError: '',\n      confirmError:  '',\n\n      hidePassword:      true,\n      hideConfirm:       true,\n      signupButtonHover: false,\n      loginButtonHover:  false,\n    }\n\n    this.goHome              = this.goHome.bind(this);\n    this.handleText          = this.handleText.bind(this);\n    this.handleHover         = this.handleHover.bind(this);\n    this.handleKeyPress      = this.handleKeyPress.bind(this);\n    this.handleSignupClick   = this.handleSignupClick.bind(this);\n    this.handlePasswordClick = this.handlePasswordClick.bind(this);\n    this.handleConfirmClick  = this.handleConfirmClick.bind(this);\n  }\n\n  goHome() {\n    this.props.logIn(this.state.username);\n    this.setState({ goHome: true });\n  }\n\n  handleText(type, value) {\n    this.setState({\n      [type]: value,\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleInputClick(type) {\n    this.setState({\n      usernameError: type === 'username' ? false : this.state.usernameError,\n      passwordError: type === 'password' ? false : this.state.passwordError,\n      confirmError:  type === 'confirm'  ? false : this.state.confirmError,\n    });\n  }\n\n  handleHover(type, pos) {\n    this.setState({\n      signupButtonHover: type === 'signup' ? (pos === 'on' ? true : false) : this.state.signupButtonHover,\n      loginButtonHover:  type === 'login'  ? (pos === 'on' ? true : false) : this.state.loginButtonHover,\n    });\n  }\n\n  handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      this.handleSignupClick();\n    }\n  }\n\n  async handleSignupClick() {\n    if (this.state.username === '') {\n      this.setState({ usernameError: 'Invalid username.' });\n      return;\n    } else if (await this.props.server.userExists(this.state.username)) {\n      this.setState({ usernameError: 'Username already taken.' });\n      return;\n    }\n\n    if (this.state.password === '') {\n      this.setState({ passwordError: 'Invalid password.' });\n      return;\n    } else if (this.state.password !== this.state.confirm) {\n      this.setState({ confirmError: 'Passwords don\\'t match.' });\n      return;\n    }\n\n    this.props.server.newUser(this.state.username, this.state.password);\n    this.props.goHome();\n  }\n\n  handlePasswordClick() {\n    this.setState({\n      hidePassword: !this.state.hidePassword,\n    });\n  }\n\n  handleConfirmClick() {\n    this.setState({\n      hideConfirm: !this.state.hideConfirm,\n    });\n  }\n\n  renderUsername() {\n    return (\n      <FormControl error={this.state.usernameError}>\n        <InputLabel>Username</InputLabel>\n        <Input\n          className='input'\n          id='standard-basic'\n          value={this.state.username}\n          onClick={ () => this.handleInputClick('username') }\n          onChange={e => this.handleText('username', e.target.value)}/>\n        <FormHelperText color='secondary'>{this.state.usernameError ? this.state.usernameError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderPassword() {\n    return (\n      <FormControl error={this.state.passwordError}>\n        <InputLabel>Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.passwordError}\n          id='standard-basic'\n          type={this.state.hidePassword ? 'password' : 'text'}\n          value={this.state.password}\n          helperText={this.state.passwordError}\n          onClick={ () => this.handleInputClick('password') }\n          onChange={e => this.handleText('password', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handlePasswordClick}>\n                {this.state.hidePassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.passwordError ? this.state.passwordError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderConfirm() {\n    return (\n      <FormControl error={this.state.confirmError}>\n        <InputLabel>Confirm Password</InputLabel>\n        <Input\n          className='input'\n          error={this.state.confirmError}\n          id='standard-basic'\n          type={this.state.hideConfirm ? 'password' : 'text'}\n          value={this.state.confirm}\n          helperText={this.state.confirmError}\n          onClick={ () => this.handleInputClick('confirm') }\n          onChange={e => this.handleText('confirm', e.target.value)}\n          endAdornment={\n            <InputAdornment position='end'>\n              <IconButton onClick={this.handleConfirmClick}>\n                {this.state.hideConfirm ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>}/>\n        <FormHelperText color='secondary'>{this.state.confirmError ? this.state.confirmError : ' '}</FormHelperText>\n      </FormControl>\n    );\n  }\n\n  renderSignupButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.signupButtonHover ? 'contained' : 'outlined'}\n        color='primary'\n        onClick={this.handleSignupClick}\n        onMouseEnter={ () => this.handleHover('signup', 'on') }\n        onMouseLeave={ () => this.handleHover('signup', 'off') }>\n          Sign up\n      </Button>\n    );\n  }\n\n  renderLoginButton() {\n    return (\n      <Button\n        className='button'\n        variant={this.state.loginButtonHover ? 'outlined' : ''}\n        color='primary'\n        onClick={this.props.goLogin}\n        onMouseEnter={ () => this.handleHover('login', 'on') }\n        onMouseLeave={ () => this.handleHover('login', 'off') }>\n          <Link className='link' to='/'>Login</Link>\n      </Button>\n    );\n  }\n\n  render() {\n    if (this.state.goHome) {\n      return <Redirect to='home' />;\n    }\n\n    return (\n      <div className='LoginSignup' onKeyPress={this.handleKeyPress}>\n        <Typography variant='h5'>\n          SIGN UP\n        </Typography>\n\n        <br/>\n\n        {this.renderUsername()}\n\n        <br/><br/>\n\n        {this.renderPassword()}\n\n        <br/><br/>\n\n        {this.renderConfirm()}\n\n        <br/><br/>\n\n        {this.renderSignupButton()}\n\n        <br/><br/>\n\n        {this.renderLoginButton()}\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport './App.css';\n\nimport Login from './views/Login';\nimport Home  from './views/Home';\n\nimport myServer from './server';\nimport Signup from './views/Signup';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n    };\n\n    this.logIn = this.logIn.bind(this);\n  }\n\n  logIn(username) {\n    this.setState({ username: username });\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Switch>\n            <Route exact path='/'>\n              <Login server={ myServer } logIn={ (u) => this.logIn(u) }/>\n            </Route>\n            <Route path='/signup'>\n              <Signup server={ myServer } logIn={ (u) => this.logIn(u) }/>\n            </Route>\n            <Route path=\"/home\">\n              <Home server={ myServer } username={this.state.username} />\n            </Route>\n            <Route>\n              <Login server={ myServer } logIn={ (u) => this.logIn(u) }/>\n            </Route>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}